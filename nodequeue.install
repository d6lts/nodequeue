<?php
// $Id$

function nodequeue_install() {
  drupal_set_message('Installing nodequeue');
  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
        db_query("CREATE TABLE if not exists {nodequeue_queue} (
          qid int(10) unsigned NOT NULL PRIMARY KEY,
          title varchar(255) NOT NULL,
          size int(3) unsigned default '0',
          link varchar(255),
          link_remove varchar(255)
        ) /*!40100 DEFAULT CHARACTER SET utf8 */");

        db_query("CREATE TABLE if not exists {nodequeue_roles} (
          qid int(10) unsigned NOT NULL,
          rid int(10) unsigned,
          KEY {nodequeue_roles}_qid_idx (qid),
          KEY {nodequeue_roles}_rid_idx (rid)
        )/*!40100 DEFAULT CHARACTER SET utf8 */");

        db_query("CREATE TABLE if not exists {nodequeue_types} (
          qid int(10) unsigned NOT NULL,
          type varchar(255),
          KEY {nodequeue_types}_qid_idx (qid),
          KEY {nodequeue_types}_type_idx (type)
        )/*!40100 DEFAULT CHARACTER SET utf8 */");

        db_query("CREATE TABLE if not exists {nodequeue_nodes} (
          qid int(10) unsigned NOT NULL,
          nid int(10) unsigned,
          position int(3) unsigned,
          KEY {nodequeue_nodes}_qid_idx (qid, position),
          KEY {nodequeue_nodes}_nid_idx (nid)
        )/*!40100 DEFAULT CHARACTER SET utf8 */");
      $success = TRUE;
      break;

    case 'pgsql':
        db_query("CREATE TABLE {nodequeue_queue} (
          qid integer NOT NULL PRIMARY KEY,
          title varchar(255) NOT NULL,
          size integer default '0',
          link varchar(255),
          link_remove varchar(255)
        )");

        db_query("CREATE TABLE {nodequeue_roles} (
          qid integer NOT NULL,
          rid integer
        )");
        db_query("CREATE INDEX {nodequeue_roles}_qid_idx ON {nodequeue_roles} (qid)");
        db_query("CREATE INDEX {nodequeue_roles}_rid_idx ON {nodequeue_roles} (rid)");

        db_query("CREATE TABLE {nodequeue_types} (
          qid integer NOT NULL,
          type varchar(255)
        )");
        db_query("CREATE INDEX {nodequeue_types}_qid_idx ON {nodequeue_types} (qid)");

        db_query("CREATE TABLE {nodequeue_nodes} (
          qid integer NOT NULL,
          nid integer,
          position integer
        )");
        db_query("CREATE INDEX {nodequeue_nodes}_qid_idx ON {nodequeue_nodes} (qid, position)");
        db_query("CREATE INDEX {nodequeue_nodes}_nid_idx ON {nodequeue_nodes} (nid)");

        db_query("CREATE SEQUENCE nodequeue_queue_qid_seq INCREMENT 1 START 1");
      $success = TRUE;
      break;
  }
  if ($success) {
    drupal_set_message(t('Nodequeue module installed tables successfully.'));
  }
  else {
    drupal_set_message(t('The installation of nodequeue module was unsuccessful.'), 
'error');
  }
}

function nodequeue_uninstall() {
  $tables = array(
    'nodequeue_queue',
    'nodequeue_roles',
    'nodequeue_types',
    'nodequeue_nodes',
  );
  foreach ($tables as $table) {
    if (db_table_exists($table)) {
      db_query("DROP TABLE {$table}");
    }
  }
}

function nodequeue_update_1() {
  if ($GLOBALS['db_type'] == 'pgsql') {
    db_query("CREATE SEQUENCE nodequeue_queue_qid_seq INCREMENT 1 START 1");
  }
}

function nodequeue_update_1000() {
  $ret = array();
  $ret[] = t(array('success' => TRUE, 'query' => 'Some of the following queries may appear to fail. This is not a problem.'));

  $ret[] = update_sql("ALTER TABLE {nodequeue_queue} ADD COLUMN link VARCHAR(40) DEFAULT '' NOT NULL");
  $ret[] = update_sql("ALTER TABLE {nodequeue_queue} ADD COLUMN link_remove VARCHAR(40) DEFAULT '' NOT NULL");
  
  $ret[] = update_sql("CREATE INDEX {nodequeue_roles}_qid_idx ON {nodequeue_roles} (qid)");
  $ret[] = update_sql("CREATE INDEX {nodequeue_roles}_rid_idx ON {nodequeue_roles} (rid)");
  $ret[] = update_sql("CREATE INDEX {nodequeue_types}_qid_idx ON {nodequeue_types} (qid)");
  $ret[] = update_sql("CREATE INDEX {nodequeue_nodes}_qid_idx ON {nodequeue_nodes} (qid, position)");
  $ret[] = update_sql("CREATE INDEX {nodequeue_nodes}_nid_idx ON {nodequeue_nodes} (nid)");
  
  $ret[] = _system_update_utf8(array('nodequeue_queue', 'nodequeue_roles', 'nodequeue_types', 'nodequeue_nodes'));
  return $ret;
}
